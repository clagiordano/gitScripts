#!/bin/bash
#       Version: 2.0.2
#
#       Copyright 2014 Claudio Giordano <claudio.giordano@autistici.org>
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 3 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.

clear;

IFS='
';
CURDIR=$(pwd);
BASEDIR="";
#GIT_REMOTES="";
#GIT_COMMANDS="git fetch --all; git pull --all; git push --all origin; git push --all backup";

#. read_ini.sh

function error()
{
    echo -e "[ \033[1;31mKO\033[0m ]: $1";
}

function success()
{
    echo -e "[ \033[1;32mOK\033[0m ]: $1";
}

function debug()
{
    #if [ ${DEBUG_MODE} == "true" ]
    #then
        #echo -e "[\033[0;35mDEBUG\033[0m      ]: \033[0;35m$1\033[0m" 1>&2;  # Redirige lo stdout su stderr
        echo -e "\033[1;35m[ ?? ]: $1\033[0m"; # 1>&2;  # Redirige lo stdout su stderr
    #fi
}

if [ $# -eq 0 ]
then
    echo "arg count 0";
    ARGDIR=${CURDIR};
else
    if [ $# -eq 1 ]
    then
        echo "arg count 1";
        BASEDIR=$1;
        ARGDIR=$(ls "$1");
    else
        echo "arg count > 1";
        ARGDIR=$*;
    fi
fi

echo "ARGDIR: '$ARGDIR'";
echo "CURDIR: '$CURDIR'";

for directory in ${ARGDIR};
do
    directory=${BASEDIR}${directory};
    if [ -d ${directory} ]
    then
        success "Check directory $directory... ";
        if eval "cd $directory"
        then
            if [ -d ".git" ]
            then
                success "Executing commands into repository... ";
                #read_ini ".git/config";
                #echo ${INI__section__key}
                
                OLD_BRANCH=$(git branch | grep '\*' | sed 's/^.\ //');
                #debug "OLD_BRANCH: ${OLD_BRANCH}";

                if eval "git fetch --all -q"
                then
                    success "Fetch all remotes";
                else
                    error "Fetch all remotes";
                fi
                    
                for branch in $(git branch | sed 's/^.\ //'); 
                do 
                    if eval "git checkout ${branch} -q"
                    then
                        success "Checkout branch '${branch}'";
                    else
                        error "Checkout branch '${branch}'";
                    fi

                    if eval "git pull --all -q"
                    then
                        success "Pull all remotes for branch '${branch}'";
                    else
                        error "Pull all remotes for branch '${branch}'";
                    fi

                    for remote in $(git remote); 
                    do 
                        if eval "git push --all ${remote} -q"
                        then
                            success "Push all branches to remote '${remote}'";
                        else
                            error "Push all branches to remote '${remote}'";
                        fi
                    done
                done;

                if eval "git checkout ${OLD_BRANCH} -q"
                then
                    success "Return to original selected branch '${OLD_BRANCH}'";
                else
                    success "Return to original selected branch '${OLD_BRANCH}'";
                fi
            else
                error "Directory '$directory' not is a valid git repository, skip!";
            fi;
            cd -;
        fi
    else
        error "Invalid directory argument: '$directory', skip!";
    fi
done;

exit 0;

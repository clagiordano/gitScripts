#!/bin/bash
#       Version: 2.0.2
#
#       Copyright 2014 Claudio Giordano <claudio.giordano@autistici.org>
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 3 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.

clear;

IFS='
';
CURDIR=$(pwd);
BASEDIR="";
#GIT_REMOTES="";
#GIT_COMMANDS="git fetch --all; git pull --all; git push --all origin; git push --all backup";

#. read_ini.sh

if [ $# -eq 0 ]
then
    echo "arg count 0";
    ARGDIR=${CURDIR};
else
    if [ $# -eq 1 ]
    then
        echo "arg count 1";
        BASEDIR=$1;
        ARGDIR=$(ls "$1");
    else
        echo "arg count > 1";
        ARGDIR=$*;
    fi
fi

echo "ARGDIR: '$ARGDIR'";
echo "CURDIR: '$CURDIR'";

for directory in ${ARGDIR};
do
    directory=${BASEDIR}${directory};
    if [ -d ${directory} ]
    then
        echo -e "[\033[1;32m OK \033[0m] Check directory $directory... ";
        if eval "cd $directory"
        then
            if [ -d ".git" ]
            then
                echo -e "[\033[1;32m OK \033[0m] Executing commands into repository... ";
                #read_ini ".git/config";
                #echo ${INI__section__key}
                
                eval "git fetch --all";
                OLD_BRANCH=$(git branch | grep '\*' | cut -d' ' -f2);

                #for remote in $(git remote);
                #do
                    for branch in $(git branch | sed 's/^.//'); 
                    do 
                        git checkout "$branch"; 
                        git pull --all; 
                    done;

                    git checkout "${OLD_BRANCH}";
                #done;
            else
                echo -e "[\033[1;31m KO \033[0m] Directory '$directory' not is a valid git repository, skip!";
            fi;
            cd -;
        fi
    else
        echo -e "[\033[1;31m KO \033[0m] Invalid directory argument: '$directory', skip!";
    fi
done;

exit 0;
